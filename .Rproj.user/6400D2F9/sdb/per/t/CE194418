{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Data analysis of police stun gun use in CT\"\nauthor: \"Andrew Ba Tran\"\ndate: \"July 1, 2016\"\noutput: html_document\n---\n\nThis is the methodology used for the [Trend CT](http://www.trendct.org) story: [Who, where and how often people are stunned by police in Connecticut](http://trendct.org/2016/07/19/who-where-and-how-often-people-are-stunned-by-police-in-connecticut/)\n\nVisit the [repo](https://github.com/trendct/data/tree/master/2016/06/stun-guns) for the [data](https://github.com/trendct/data/tree/master/2016/06/stun-guns/data) used in this analysis. (Also, check out the reproducible scripts and data behind many of our other stories in our [central repo](https://github.com/trendct/data))\n\nData for this analysis was provided by CCSU's [Institute for Municipal and Regional Policy](http://www.ccsu.edu/imrp/projects/taser.html), compiled from reports gathered by individual police departments as mandated by Connecticut law. However, this is a new form of data collection so quality of data varies department to department.\n\n**Whatâ€™s in this script**\n\nSeveral visualizations and tables exploring the data\n\n-----\n\n*Bonus:* As an interesting exercise, my colleague Jake Kara, also worked did a data analysis for story but [with Python](https://github.com/trendct/data/tree/master/2016/06/taser-incidents).\n\nWe livestreamed our process. Jake with Python [[video](https://www.livecoding.tv/jakekara/videos/aEEG3-ct-stun-gun-analysis-3)]. Me with R (Sorry, I didn't realize I was on mute for the first part) [[video](https://www.livecoding.tv/abtran/videos/BMMN3-analyzing-stun-gun-use-data-with-r/)].\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n### Preparing the data\n\n```{r setup2, warning=F, message=FALSE}\nlibrary(readxl)\nlibrary(openxlsx)\nstuns <- read_excel(\"data/2015 Reported Taser Data.xlsx\", sheet=1)\n\n# You can also download the data here http://www.ccsu.edu/imrp/projects/files/2015%20Reported%20Taser%20Data.xlsx\n\n\nstuns[1,] <- ifelse(is.na(stuns[1,]), colnames(stuns), stuns[1,])\ncolnames(stuns) <- stuns[1,]\n\nstuns <- stuns[-1,]\n\ncolnames(stuns) <- make.names(colnames(stuns))\n\n# another stream but for python data analysis going on right now:\n# https://www.livecoding.tv/jakekara/\n\nlibrary(dplyr)\n\n# Cleaning up the data\n\ncolnames(stuns) <- c(\"Law.Enforcement.Agency\",\n                     \"Number.of.Incident.Reports\",\n                     \"Incident.Case.Number\",\n                     \"Date.of.Incident\",\n                     \"Time.of.Incident\",\n                     \"Sex\",\n                     \"Race\",\n                     \"Hispanic\",\n                     \"Height\",\n                     \"Weight\",\n                     \"Age\",\n                     \"Deployment.Type.I\",\n                     \"Deployment.Type.II\",\n                     \"Displays.or.Arc\",\n                     \"Drive.Stun.Application\",\n                     \"Activation.After.Probe.Contact\",\n                     \"Number.of.Deployments\",\n                     \"Warning.to.Subject\",\n                     \"Subject.Injured\",\n                     \"Subject.Not.Injured\",\n                     \"Subject.Bruises\",\n                     \"Subject.Abrasions\",\n                     \"Subject.Breathing.Difficulty\",\n                     \"Subject.Probe.Puncture.Only\",\n                     \"Subject.Lost.Consciousness\",\n                     \"Subject.Death\",\n                     \"Subject.Other\",\n                     \"Officer.Injured\",\n                     \"Officer.Not.Injured\",\n                     \"Officer.Bruises\",\n                     \"Officer.Abrasions\",\n                     \"Officer.Breathing.Difficulty\",\n                     \"Officer.Probe.Puncture.Only\",\n                     \"Officer.Lost.Consciousness\",\n                     \"Officer.Death\",\n                     \"Officer.Other\",\n                     \"Location.Environment\",\n                     \"Officer.s.Arrival\",\n                     \"If.Other..Explain\",\n                     \"Crime.in.Progress\",\n                     \"Domestic.Disturbance\",\n                     \"Disturbance..Other.\",\n                     \"Traffic.Stop\",\n                     \"Emotionally.Disturbed.Person\",\n                     \"Suspicious.Person\",\n                     \"Executing.Warrant\",\n                     \"Under.Influence\",\n                     \"Activity.Other\",\n                     \"Non.aggressive\",\n                     \"Previous.Hostility\",\n                     \"Possibly.Intoxicated\",\n                     \"Emotionally.Disturbed\",\n                     \"Aggressive..Verbal.\",\n                     \"Aggressive..Physical.\",\n                     \"Armed.with\",\n                     \"Officer.Perception.Other\",\n                     \"Threat..Hostile\",\n                     \"Dead.Weight..Non.Compliant\",\n                     \"Fighting.Stance..Combative\",\n                     \"Threaten.Use.of.Weapon\",\n                     \"Fleeing\",\n                     \"Unarmed.Assault\",\n                     \"Armed.with.Firearm\",\n                     \"Armed.with.Edged.Weapon\",\n                     \"Armed.with.Blunt.Instrument\",\n                     \"Armed.with.Other\",\n                     \"Failed.to.Follow.Directions\",\n                     \"Suicidal\",\n                     \"Resistance.Other\")\n\nstuns$race_ethnicity <- ifelse(stuns$Hispanic==1, \"Hispanic\", stuns$Race)\n```\n\n## Stun incidents by race in the state\n\n```{r state}\n\nby_state <- stuns %>%\n  group_by(race_ethnicity) %>%\n  summarise(total=n()) %>%\n  mutate(percent=round(total/sum(total)*100,2))\n  \nlibrary(knitr)\nkable(by_state)\n```\n\n## Total stun incidents per department\n\n```{r by_department}\nlibrary(tidyr)\nlibrary(DT)\n\nby_dept_total <- stuns %>%\n  group_by(Law.Enforcement.Agency, race_ethnicity) %>%\n  summarise(total=n()) %>%\n  spread(race_ethnicity, total)\n\ndatatable(by_dept_total)\n```\n\n## Stun incidents per department by race\n\n```{r dept_percent}\nby_dept_percent <- stuns %>%\n  group_by(Law.Enforcement.Agency, race_ethnicity) %>%\n  summarise(total=n()) %>%\n  mutate(percent=round(total/sum(total)*100,2)) %>%\n  select(Law.Enforcement.Agency, race_ethnicity, percent) %>%\n  spread(race_ethnicity, percent)\n\ndatatable(by_dept_percent)\n```\n\n## Time of stun incidents\n\n\n```{r time}\n\nstuns$Time.of.Incident <- convertToDateTime(as.numeric(stuns$Time.of.Incident), origin = \"2016-07-04\")\n\nlibrary(lubridate)\n\nstuns$hour <- hour(stuns$Time.of.Incident)\n\nlibrary(ggplot2)\nlibrary(extrafont)\nlibrary(ggalt)\n\nggplot(stuns, aes(hour)) + geom_histogram(binwidth=1)\n\n# Time of stun incidents by race\n\nggplot(stuns, aes(hour, fill=race_ethnicity)) + geom_histogram(binwidth=1)\n\n```\n\n## Month\n\n```{r month}\nstuns$Date.of.Incident <- as.POSIXct(as.numeric(stuns$Date.of.Incident) * (60*60*24)\n                                     , origin=\"1899-12-30\"\n                                     , tz=\"GMT\")\n\nstuns$month <- month(stuns$Date.of.Incident, label=TRUE)\n\nggplot(stuns, aes(month)) + geom_bar()\n\n\nggplot(stuns, aes(month)) + geom_bar() + facet_grid(race_ethnicity ~.)\n```\n\n## Day of the week\n\n```{r day_of_week}\n\nstuns$day <- wday(stuns$Date.of.Incident, label=TRUE)\n\nggplot(stuns, aes(day)) + geom_bar()\n\nggplot(stuns, aes(day)) + geom_bar() + facet_grid(race_ethnicity ~.)\n\n```\n\n## Mapping total stun gun incidents\n\n```{r map_total, fig.height=7, fig.width=10}\n\n## Mapping\n\nrequire(scales)\nrequire(dplyr)\nrequire(gtools)\nrequire(ggplot2)\nrequire(rgdal)\nrequire(ggmap)\nrequire(Cairo)\nrequire(gpclib)\nrequire(maptools)\nrequire(reshape)\nlibrary(devtools)\nlibrary(stringr)\nlibrary(raster)\nlibrary(sp)\n\n\nby_dept_total[is.na(by_dept_total)] <-0 \nby_dept_total$total <- by_dept_total$Asian + by_dept_total$Black + by_dept_total$Hispanic + by_dept_total$Unknown + by_dept_total$White\n  \ngpclibPermit()\ngpclibPermitStatus()\ntownborders <- readOGR(dsn=\"maps\", layer=\"ctgeo\")\ntownborders_only <- townborders\ntownborders<- fortify(townborders, region=\"NAME10\")\n\nnames(by_dept_total)[names(by_dept_total) == 'Law.Enforcement.Agency'] <- 'id'\n\n\ntotal_map <- left_join(townborders, by_dept_total)\n\ntm_ct <- ggplot() +\n  geom_polygon(data = total_map, aes(x=long, y=lat, group=group, fill=total), color = \"black\", size=0.2) +\n  geom_polygon(data = total_map, aes(x=long, y=lat, group=group, fill=total), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Reds\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Where people are tased (total)\", fill=\"\")\n\nprint(tm_ct)\n```\n\n## Mapping percent by race\n\n```{r map_percent, fig.height=7, fig.width=10}\n\n# White\nnames(by_dept_percent)[names(by_dept_percent) == 'Law.Enforcement.Agency'] <- 'id'\n\n\npercent_map <- left_join(townborders, by_dept_percent)\n\ntm_ct <- ggplot() +\n  geom_polygon(data = percent_map, aes(x=long, y=lat, group=group, fill=White), color = \"black\", size=0.2) +\n  geom_polygon(data = percent_map, aes(x=long, y=lat, group=group, fill=White), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Reds\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Percent of white suspects tased\", fill=\"\")\n\nprint(tm_ct)\n\n\n# Black\n\ntm_ct <- ggplot() +\n  geom_polygon(data = percent_map, aes(x=long, y=lat, group=group, fill=Black), color = \"black\", size=0.2) +\n  geom_polygon(data = percent_map, aes(x=long, y=lat, group=group, fill=Black), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Reds\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Percent of Black suspects tased\", fill=\"\")\n\nprint(tm_ct)\n\n\n# Hispanic\ntm_ct <- ggplot() +\n  geom_polygon(data = percent_map, aes(x=long, y=lat, group=group, fill=Hispanic), color = \"black\", size=0.2) +\n  geom_polygon(data = percent_map, aes(x=long, y=lat, group=group, fill=Hispanic), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Reds\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Percent of Hispanic suspects tased\", fill=\"\")\n\nprint(tm_ct)\n\n```\n\n## Gender breakdown\n\n```{r gender}\n\ngender <- stuns %>%\n  group_by(Sex) %>%\n  summarise(Count=n()) %>%\n  mutate(Percent=round(Count/sum(Count)*100,2))\n\nkable(gender)\n```\n\n## Median age\n\n```{r age}\n\n# Median age\n\nmedian(as.numeric(stuns$Age), na.rm=T)\n```\n\n## Age distribution\n\n```{r ages, fig.height=7, fig.width=9}\n\nstuns$Age <- as.numeric(stuns$Age)\n\n# Age distribution\nggplot(stuns, aes(Age)) + geom_histogram(binwidth=1)\nggplot(stuns, aes(Age)) + geom_histogram(binwidth=10)\n\nstuns3 <- subset(stuns, Age < 100)\nstuns3 <- subset(stuns3, race_ethnicity!=\"Asian\")\nstuns3 <- subset(stuns3, race_ethnicity!=\"Unknown\")\n\ngg <- ggplot(stuns3, aes(Age)) + geom_histogram(fill=\"#bf6151\", binwidth=2) + facet_grid(race_ethnicity ~ .)\ngg <- gg + labs(x=\"Age\", y=\"Stuns deployed\", title=\"Distribution of stuns by age\",\n                subtitle=\"\",\n                caption=\"SOURCE: CCSU Institute for Municipal and Regional Policy Management \\nAndrew Ba Tran/TrendCT.org\")\ngg <- gg + theme_bw(base_family=\"Calibri\")\ngg <- gg + theme(text = element_text(size=20))\n#gg <- gg + theme(panel.grid.major=element_blank())\n#gg <- gg + theme(panel.grid.minor=element_blank())\ngg <- gg + theme(panel.border=element_blank())\ngg <- gg + theme(text = element_text(size=20))\n#gg <- gg + theme(axis.ticks=element_blank())\ngg <- gg +  theme(legend.position = \"none\")\n#gg <- gg + theme(axis.text.x=element_blank())\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Black\", size=22))\ngg <- gg + theme(plot.subtitle=element_text(face=\"italic\", size=15, margin=margin(b=12)))\ngg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=12), color=\"#7a7d7e\"))\ngg\n\n\n```\n\n## Where does this happen?\n\n```{r where}\n\nlocations <- stuns %>%\n  group_by(Location.Environment) %>%\n  summarise(count=n()) %>%\n  mutate(percent=round(count/sum(count)*100,2))\n\nkable(locations)\n\n\ngg <- ggplot(stuns3, aes(Location.Environment)) + facet_grid(race_ethnicity ~.) + geom_bar(fill=\"#bf6151\") + coord_flip()\ngg <- gg + labs(x=NULL, y=\"Stuns deployed\", title=\"Distribution of stuns by location\",\n                subtitle=\"\",\n                caption=\"SOURCE: CCSU Institute for Municipal and Regional Policy Management \\nAndrew Ba Tran/TrendCT.org\")\ngg <- gg + theme_bw(base_family=\"Calibri\")\ngg <- gg + theme(text = element_text(size=20))\n#gg <- gg + theme(panel.grid.major=element_blank())\n#gg <- gg + theme(panel.grid.minor=element_blank())\ngg <- gg + theme(panel.border=element_blank())\ngg <- gg + theme(text = element_text(size=20))\n#gg <- gg + theme(axis.ticks=element_blank())\ngg <- gg +  theme(legend.position = \"none\")\n#gg <- gg + theme(axis.text.x=element_blank())\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Black\", size=22, hjust=-1.1))\ngg <- gg + theme(plot.subtitle=element_text(face=\"italic\", size=15, margin=margin(b=12)))\ngg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=12), color=\"#7a7d7e\"))\ngg\n```\n\n## What is the subject holding\n\n```{r what}\nstuns$Armed.with <- str_to_title(stuns$Armed.with)\nweapon <- stuns %>%\n  group_by(Armed.with) %>%\n  summarise(count=n()) %>%\n  arrange(-count)\n\nweapon <- subset(weapon, !is.na(Armed.with))\nkable(weapon)\n```\n\n\n## How often tased\n\n```{r how}\nstuns$Number.of.Deployments <- as.numeric(stuns$Number.of.Deployments)\n\ndeployed <- stuns %>%\n  group_by(race_ethnicity) %>%\n  summarise(mean(Number.of.Deployments, na.rm=T))\n\nkable(deployed)\n```\n\n## Doesn't say much. Let's try another factor\n\n```{r new_factor, warning=F}\n\nstuns$deployment <- ifelse(stuns$Number.of.Deployments>1, \"multiple\", \"single\")\nstuns$deployment <- ifelse(stuns$Number.of.Deployments==0, \"none\", stuns$deployment)\n\ndeployed <- stuns %>%\n  group_by(race_ethnicity, deployment) %>%\n  summarise(count=n()) %>%\n  mutate(percent=round(count/sum(count)*100,2)) \n\ndeployed <- deployed[c(\"race_ethnicity\", \"deployment\", \"percent\")]\n\ndeployed <- subset(deployed, !is.na(deployment))\n\ndeployed <- deployed %>%\n  spread(deployment, percent)\n\nkable(deployed)\n```\n\n\n## Weights \n\n```{r weights, fig.height=6, fig.width=9, warning=F}\n\nstuns$Weight <- as.numeric(stuns$Weight)\nstuns2 <- subset(stuns, !is.na(Number.of.Deployments))\n\ngg <- ggplot(stuns2, aes(factor(Number.of.Deployments), Weight)) \ngg <- gg + geom_boxplot((aes(fill=factor(Number.of.Deployments)))) \ngg <- gg + labs(x=\"Stuns deployed\", y=\"Pounds\", title=\"Distribution of number of stuns by suspect's weight\",\n                subtitle=\"The median number of times a person is stunned by police tends to trend with heaviness of suspect.\\nNote: Sample size for 5-10 deployments is between 1 and 4 eachâ€” too small to draw conclusions.\",\n                caption=\"SOURCE: CCSU Institute for Municipal and Regional Policy Management \\nAndrew Ba Tran/TrendCT.org\")\ngg <- gg + theme_bw(base_family=\"Calibri\")\ngg <- gg + theme(text = element_text(size=20))\n#gg <- gg + theme(panel.grid.major=element_blank())\n#gg <- gg + theme(panel.grid.minor=element_blank())\ngg <- gg + theme(panel.border=element_blank())\ngg <- gg + theme(text = element_text(size=20))\ngg <- gg + theme(axis.ticks=element_blank())\ngg <- gg +  theme(legend.position = \"none\")\n#gg <- gg + theme(axis.text.x=element_blank())\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Black\", size=22))\ngg <- gg + theme(plot.subtitle=element_text(face=\"italic\", size=15, margin=margin(b=12)))\ngg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=12), color=\"#7a7d7e\"))\ngg\n\nb2<-ggplot(stuns, aes(factor(Number.of.Deployments), Weight)) + \n  geom_jitter(alpha=I(1/4), aes(color=Number.of.Deployments)) +\n  theme(legend.position = \"none\")\n```\n\n\n## Heights\n\n```{r heights, fig.height=6, fig.width=9, warning=F}\n\nstuns$Height <- ifelse(stuns$Height==\"6'\", \"6'0\\\"\", stuns$Height)\nstuns$Height <- ifelse(stuns$Height==\"5'\", \"5'0\\\"\", stuns$Height)\n\nstuns$Height.inches <- sapply(strsplit(as.character(stuns$Height),\"'|\\\"\"),\n       function(x){12*as.numeric(x[1]) + as.numeric(x[2])})\nstuns2 <- subset(stuns, !is.na(Number.of.Deployments))\n\ngg <- ggplot(stuns2, aes(factor(Number.of.Deployments), Height.inches)) \ngg <- gg + geom_boxplot((aes(fill=factor(Number.of.Deployments)))) \ngg <- gg + labs(x=\"Stuns deployed\", y=\"Inches\", title=\"Distribution of number of stuns by suspect's height\",\n                subtitle=\"The median number of times a person is stunned by police tends to trend with heaviness of suspect.\\nNote: Sample size for 5-10 deployments is between 1 and 4 eachâ€” too small to draw conclusions.\",\n                caption=\"SOURCE: CCSU Institute for Municipal and Regional Policy Management \\nAndrew Ba Tran/TrendCT.org\")\ngg <- gg + theme_bw(base_family=\"Calibri\")\ngg <- gg + theme(text = element_text(size=20))\n#gg <- gg + theme(panel.grid.major=element_blank())\n#gg <- gg + theme(panel.grid.minor=element_blank())\ngg <- gg + theme(panel.border=element_blank())\ngg <- gg + theme(text = element_text(size=20))\ngg <- gg + theme(axis.ticks=element_blank())\ngg <- gg +  theme(legend.position = \"none\")\n#gg <- gg + theme(axis.text.x=element_blank())\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Black\", size=22))\ngg <- gg + theme(plot.subtitle=element_text(face=\"italic\", size=15, margin=margin(b=12)))\ngg <- gg + theme(plot.caption=element_text(size=12, margin=margin(t=12), color=\"#7a7d7e\"))\ngg\n```",
    "created" : 1468933981549.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1698902444",
    "id" : "CE194418",
    "lastKnownWriteTime" : 1468934376,
    "last_content_update" : 1468934376,
    "path" : "~/Documents/Github/data/2016/06/stun-guns/index.Rmd",
    "project_path" : "index.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}